{"ast":null,"code":"var _jsxFileName = \"/Users/pratikkumar/Downloads/sockets-practice1/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { socket } from \"./sockets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n    };\n  }, []);\n  const handleCreateLobby = () => {\n    socket.emit(\"lobby:create\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ALL SET YOU ARE CONNECTED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateLobby,\n      children: \"Make Lobby\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"nf+PQypi/DaNIVJaZnZaC4qQS28=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","logo","socket","jsxDEV","_jsxDEV","App","_s","isConnected","setIsConnected","connected","onConnect","onDisconnect","on","off","handleCreateLobby","emit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/pratikkumar/Downloads/sockets-practice1/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { socket } from \"./sockets\";\n\nfunction App() {\n  const [isConnected, setIsConnected] = useState(socket.connected);\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n    };\n  }, []);\n  const handleCreateLobby = () => {\n    socket.emit(\"lobby:create\");\n  };\n  return (\n    <div className=\"App\">\n      <h1>ALL SET YOU ARE CONNECTED</h1>\n      <button onClick={handleCreateLobby}>Make Lobby</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAACG,MAAM,CAACO,SAAS,CAAC;EAChET,SAAS,CAAC,MAAM;IACd,SAASU,SAASA,CAAA,EAAG;MACnBF,cAAc,CAAC,IAAI,CAAC;IACtB;IAEA,SAASG,YAAYA,CAAA,EAAG;MACtBH,cAAc,CAAC,KAAK,CAAC;IACvB;IAEAN,MAAM,CAACU,EAAE,CAAC,SAAS,EAAEF,SAAS,CAAC;IAC/BR,MAAM,CAACU,EAAE,CAAC,YAAY,EAAED,YAAY,CAAC;IAErC,OAAO,MAAM;MACXT,MAAM,CAACW,GAAG,CAAC,SAAS,EAAEH,SAAS,CAAC;MAChCR,MAAM,CAACW,GAAG,CAAC,YAAY,EAAEF,YAAY,CAAC;IACxC,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EACN,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;IAC9BZ,MAAM,CAACa,IAAI,CAAC,cAAc,CAAC;EAC7B,CAAC;EACD,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAyB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCjB,OAAA;MAAQkB,OAAO,EAAER,iBAAkB;MAAAG,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV;AAACf,EAAA,CA5BQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA8BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}