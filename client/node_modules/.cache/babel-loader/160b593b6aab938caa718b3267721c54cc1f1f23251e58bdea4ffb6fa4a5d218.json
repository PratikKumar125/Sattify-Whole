{"ast":null,"code":"var _jsxFileName = \"/Users/pratikkumar/Downloads/sockets-practice1/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { socket } from \"./sockets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMatchWaiting, setIsMatchWaiting] = useState(null);\n  const [isMatchFound, setIsMatchFound] = useState(null);\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n    };\n  }, []);\n  const handleCreateLobby = () => {\n    socket.emit(\"lobby:join\", {\n      name: \"pratik kumar\",\n      email: \"prateektiwari378@gmail.com\"\n    });\n  };\n  socket.on(\"match:waiting\", args => {\n    if (args !== null && args !== void 0 && args.message) {\n      setIsMatchWaiting(true);\n    }\n  });\n  socket.on(\"joinRoom\", data => {\n    socket.emit(\"joinRoom\", data.room);\n  });\n  socket.on(\"match:done\", args => {\n    setIsMatchFound(args);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"ALL SET YOU ARE CONNECTED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isMatchFound ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Total users connected :- \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User 1 \", isMatchFound === null || isMatchFound === void 0 ? void 0 : isMatchFound.user1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"User 2 \", isMatchFound === null || isMatchFound === void 0 ? void 0 : isMatchFound.user2]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : isMatchWaiting ? \"Please wait, We are connecting you with other users\" : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCreateLobby,\n        children: \"Join lobby\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ggYa2fmk0q845SPSpbFByWiQZIU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isMatchWaiting","setIsMatchWaiting","isMatchFound","setIsMatchFound","onConnect","setIsConnected","onDisconnect","on","off","handleCreateLobby","emit","name","email","args","message","data","room","className","children","fileName","_jsxFileName","lineNumber","columnNumber","user1","user2","onClick","_c","$RefreshReg$"],"sources":["/Users/pratikkumar/Downloads/sockets-practice1/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { socket } from \"./sockets\";\n\nfunction App() {\n  const [isMatchWaiting, setIsMatchWaiting] = useState(null);\n  const [isMatchFound, setIsMatchFound] = useState(null);\n\n  useEffect(() => {\n    function onConnect() {\n      setIsConnected(true);\n    }\n\n    function onDisconnect() {\n      setIsConnected(false);\n    }\n\n    socket.on(\"connect\", onConnect);\n    socket.on(\"disconnect\", onDisconnect);\n\n    return () => {\n      socket.off(\"connect\", onConnect);\n      socket.off(\"disconnect\", onDisconnect);\n    };\n  }, []);\n\n  const handleCreateLobby = () => {\n    socket.emit(\"lobby:join\", {\n      name: \"pratik kumar\",\n      email: \"prateektiwari378@gmail.com\",\n    });\n  };\n\n  socket.on(\"match:waiting\", (args) => {\n    if (args?.message) {\n      setIsMatchWaiting(true);\n    }\n  });\n\n  socket.on(\"joinRoom\", (data) => {\n    socket.emit(\"joinRoom\", data.room);\n  });\n\n  socket.on(\"match:done\", (args) => {\n    setIsMatchFound(args);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1>ALL SET YOU ARE CONNECTED</h1>\n      {isMatchFound ? (\n        <>\n          <p>Total users connected :- </p>\n          <p>User 1 {isMatchFound?.user1}</p>\n          <p>User 2 {isMatchFound?.user2}</p>\n        </>\n      ) : isMatchWaiting ? (\n        \"Please wait, We are connecting you with other users\"\n      ) : (\n        <>\n          <button onClick={handleCreateLobby}>Join lobby</button>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}